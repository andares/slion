#!/usr/bin/env php
<?php
/**
 * @author andares
 */
define('IN_CONSOLE', 1);

// 载入环境
$settings = require __DIR__ . '/src/settings.php';
require __DIR__ . '/vendor/autoload.php';

/* @var $run \Slion\Run */
$run->setup('chord', new class(__DIR__) extends Slion\Init {
    public function head(\Slim\App $app, \Slim\Container $container, array $settings) {
        $container['chord'] = function ($c) {
            return new Slion\Chord($c);
        };
        $chord = $container->get('chord');
        /* @var $chord \Slion\Console */
        $chord->map("$this->root/src/classes/Slion", 'Slion');
        // 设置console
        $chord->setDefaultDomain('slion');
    }
});

$app = $run();

// 获取 $chord
/* @var $app \Slim\App */
$chord = $app->getContainer()->get('chord');
/* @var $chord \Slion\Console */

// 载入commands
$commands = __DIR__ . DIRECTORY_SEPARATOR . 'src' . DIRECTORY_SEPARATOR . 'commands.php';
file_exists($commands) && require $commands;

// 扫描目录
$classes_dir = __DIR__ . "/src/classes";
if (file_exists($classes_dir)) {
    $it = new \RecursiveDirectoryIterator($classes_dir);
    foreach ($it as $file) {
        /* @var $file \SplFileInfo */
        if (!$file->isDir()) {
            continue;
        }
        $chord->map($file->getRealPath(), $file->getBasename());
    }
}

try {
    $result = $chord($argv);
    $chord->ec("$result");
} catch (Throwable $exc) {
    $chord->ec($exc->getMessage(), 'halt');

    $chord->ec($exc->getTraceAsString());
}
//du($chord);
